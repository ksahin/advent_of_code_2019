const jour5 = () => {
	const input =
		"3,225,1,225,6,6,1100,1,238,225,104,0,1101,91,67,225,1102,67,36,225,1102,21,90,225,2,13,48,224,101,-819,224,224,4,224,1002,223,8,223,101,7,224,224,1,223,224,223,1101,62,9,225,1,139,22,224,101,-166,224,224,4,224,1002,223,8,223,101,3,224,224,1,223,224,223,102,41,195,224,101,-2870,224,224,4,224,1002,223,8,223,101,1,224,224,1,224,223,223,1101,46,60,224,101,-106,224,224,4,224,1002,223,8,223,1001,224,2,224,1,224,223,223,1001,191,32,224,101,-87,224,224,4,224,102,8,223,223,1001,224,1,224,1,223,224,223,1101,76,90,225,1101,15,58,225,1102,45,42,224,101,-1890,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,101,62,143,224,101,-77,224,224,4,224,1002,223,8,223,1001,224,4,224,1,224,223,223,1101,55,54,225,1102,70,58,225,1002,17,80,224,101,-5360,224,224,4,224,102,8,223,223,1001,224,3,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,677,677,224,102,2,223,223,1005,224,329,1001,223,1,223,1108,677,226,224,1002,223,2,223,1006,224,344,101,1,223,223,107,677,226,224,1002,223,2,223,1006,224,359,101,1,223,223,108,677,677,224,1002,223,2,223,1006,224,374,1001,223,1,223,108,226,677,224,1002,223,2,223,1006,224,389,101,1,223,223,7,226,677,224,102,2,223,223,1006,224,404,1001,223,1,223,1108,677,677,224,1002,223,2,223,1005,224,419,101,1,223,223,1008,226,677,224,102,2,223,223,1006,224,434,101,1,223,223,107,226,226,224,102,2,223,223,1005,224,449,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,479,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,494,1001,223,1,223,8,226,226,224,102,2,223,223,1006,224,509,101,1,223,223,1107,677,677,224,102,2,223,223,1005,224,524,1001,223,1,223,1108,226,677,224,1002,223,2,223,1006,224,539,101,1,223,223,1107,677,226,224,1002,223,2,223,1006,224,554,101,1,223,223,1007,677,226,224,1002,223,2,223,1005,224,569,101,1,223,223,7,677,226,224,1002,223,2,223,1006,224,584,101,1,223,223,107,677,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,614,101,1,223,223,7,677,677,224,1002,223,2,223,1006,224,629,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,644,101,1,223,223,108,226,226,224,102,2,223,223,1005,224,659,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,674,101,1,223,223,4,223,99,226";

	let test =
		"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99";

	const part1 = (inp, store, mode) => {
		let diag = new Set();
		let a = inp.split(",").map(Number);

		const interpreteur = (x, a) => {
			if (a[x] === 99) return diag;
			let o;
			let inst = a[x];
			let A, B, C, D;

			let seg = [...(inst + "")].map(Number);

			if (seg.length === 3) {
				A = false;
				B = false;
				C = seg[0] === 1 ? true : false;
				D = seg[seg.length - 1];
			} else if (seg.length === 4) {
				A = false;
				B = seg[0] === 1 ? true : false;
				C = seg[1] === 1 ? true : false;
				D = seg[seg.length - 1];
			} else if (seg.length === 5) {
				A = seg[0] === 1 ? true : false;
				B = seg[1] === 1 ? true : false;
				C = seg[2] === 1 ? true : false;
				D = seg[seg.length - 1];
			} else {
				A = false;
				B = false;
				C = false;
				D = seg[0];
			}

			if (D === 1 || D === 2) {
				o = a.slice(x, x + 4);
			} else if (D === 3 || D === 4) {
				o = a.slice(x, x + 2);
			} else {
				o = a.slice(x, x + 4);
			}

			let in1 = C ? o[1] : a[o[1]];
			let in2 = B ? o[2] : a[o[2]];

			if (D === 1) {
				if (A) {
					o[3] = in1 + in2;
				} else {
					a[o[3]] = in1 + in2;
				}
				x += 4;
			} else if (D === 2) {
				if (A) o[3] = in1 * in2;
				a[o[3]] = in1 * in2;
				x += 4;
			} else if (D === 3) {
				a[o[1]] = store;
				x += 2;
			} else if (D === 4) {
				let yuyu = C || B ? o[1] : a[o[1]];
				diag.add(yuyu);

				x += 2;
			} else if (D === 5) {
				if (in1 !== 0) {
					x = C || D ? o[2] : a[o[2]];
				} else {
					x += 3;
				}
			} else if (D === 6) {
				if (in1 === 0) {
					x = C || B ? o[2] : a[o[2]];
				} else {
					x += 3;
				}
			} else if (D === 7) {
				if (in1 < in2) {
					a[o[3]] = 1;
				} else {
					a[o[3]] = 0;
				}
				x += 4;
			} else if (D === 8) {
				if (in1 === in2) {
					a[o[3]] = 1;
				} else {
					a[o[3]] = 0;
				}
				x += 4;
			} else {
				console.error("err:", o);
				return false;
			}

			if (x > a.length) return o;

			return interpreteur(x, a);
		};
		return interpreteur(0, a);
	};

	let s1 = part1(input, 1);
	console.log("s1 : ", s1);
};

jour5();